log4j.rootLogger=debug,stdout
#大佬配置
#log4j.rootLogger = [ level ] , appenderName1, appenderName2, …
#控制应用程序中相应级别的日志信息的开关;stdout相当于一个appenderName
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %5p %t %c%M %l-%m%n


#自定义 log4jdemo logger类型
#log4j.logger.log4jdemo=debug,rollinglogfile
##log4jdemo是自定义的logger的名字，用在代码中；rollinglogfile是它的别名,用在properties配置文件中
##如果additivity为false，那么只生成一个rollinglogfile.log的日志文件，屏幕上没有日志信息输出。
##如果additivity为true那么，屏幕上有日志信息显示
##如果自定义的logger输出的话，就可以单独在
#log4j.additivity.log4jdemo=false
#log4j.appender.rollinglogfile=org.apache.log4j.RollingFileAppender
#log4j.appender.rollinglogfile.Append=true
#log4j.appender.rollinglogfile.File=rollinglogfile.log
#log4j.appender.rollinglogfile.MaxFileSize=10KB
#log4j.appender.rollinglogfile.MaxBackupIndex=10
#log4j.appender.rollinglogfile.layout=org.apache.log4j.TTCCLayout


#自定义 yarnInfo logger类型
#log4j.logger.yarnInfo=info,yarnInfo
#log4j.additivity.yarnInfo=false
#log4j.appender.yarnInfo=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.yarnInfo.layout=org.apache.log4j.PatternLayout
#log4j.appender.yarnInfo.layout.ConversionPattern=[%d{yyyyMMdd HH:mm:ss}-%p][%F:%L][%t]-- %m%n
#log4j.appender.yarnInfo.File=yarn-info.log